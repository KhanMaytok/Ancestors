namespace = ACS

########################
## TIAMAT EVENT CHAIN ##
########################
# ACS.00001 - Tiamat comet in the sky
narrative_event = {
	id = ACS.00001
	title = ACS_00001_TITLE
	desc = ACS_00001_DESC
	is_triggered_only = yes
	ai = no
	picture = GFX_evt_tiamat

	trigger = {
		NOT = { has_global_flag = comet_tiamat }
		is_the_main_player_trigger = yes
	}

	option = {
		name = ACS_00001_OPT_A
		set_global_flag = comet_tiamat
		narrative_event = { id = ACS.00004 days = 20 }

		hidden_effect = {
			# Search for Venezia
			random_character = {
				limit = {
					has_landed_title = c_venezia
					is_merchant_republic = yes
				}
				character_event = { id = ACS.00002 }
			}

			# Search another merchant republic
			random_character = {
				limit = {
					is_merchant_republic = yes
				}
				character_event = { id = ACS.00002 days = 5 } 
			}

			# Ramdom duchy into merchan republic
			random_character = {
				limit = {
					is_ruler = yes
					is_landed = yes
					real_tier = DUKE
					ai = yes
				}
				set_character_flag = transition_to_republic
				character_event = { id = ACS.00002 days = 15 }
			}
		}
	}
}

# ACS.00002 - Kill a entire patrician family
character_event = {
	id = ACS.00002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = infiltered_venezia }
	}

	immediate = {
		set_global_flag = infiltered_venezia
		if = {
			limit = {
				has_character_flag = transition_to_republic
			}
			set_government_type = merchant_republic_government
		}

		any_vassal = {
			set_character_flag = check_for_dissapears
		}

		# Create OLAF
		create_character = {
			dynasty = 300001
			religion = greek
			culture = catholic
			trait = cruel
			trait = ambitious
			trait = elusive_shadow
			trait = shrewd
			trait = quick
			trait = hunter
			trait = diligent
			trait = lustful
			trait = robust
			trait = strategist
			trait = socializer
			trait = hedonist
			trait = seducer
		}
		new_character = {
			set_character_flag = is_olaf
			set_character_flag = originated_from_chinese_court
			set_character_flag = immune_tuberculosis
			set_character_flag = immune_bubonic_plague
			create_family_palace = yes			
			save_event_target_as = olaf_the_killer
			family_palace = {
				create_pentaghast_buildings_effect = yes
			}
			character_event = { id = ACS.00003 } # Generate family BEFORE initialization for court number checks
		}

		random_vassal = {
			limit = {
				is_patrician = yes
				NOT = { has_character_flag = is_olaf }
				ai = yes
			}
			any_dynasty_member = {
				death = {
					death_reason = death_poor_health
				}
			}
			death = {
				death_reason = death_poor_health
			}
		}
	}	
}

# ACS.00003 - Spawn Senua, Olaf and Tilda and parents
character_event = {
	id = ACS.00003
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		save_event_target_as = olaf_the_killer

		create_character = { # Olaf spouse
			female = yes
			age = 18
			trait = grey_eminence
			trait = physician
			trait = scarred
			trait = fair
			trait = quick
			trait = shrewd
			trait = gardener
			trait = poet
			trait = diligent
			trait = lustful
			trait = proud
			trait = brave
			trait = erudite
			culture = ROOT
			religion = ROOT
			dynasty = none
		}
		new_character = {
			add_spouse = ROOT
			add_lover = ROOT
			save_event_target_as = olaf_spouse
			set_character_flag = immune_tuberculosis
			set_character_flag = immune_bubonic_plague
			save_event_target_as = olaf_spouse
		}

		create_olaf_children_effect = yes
		create_olaf_children_effect = yes
		create_olaf_children_effect = yes
		create_olaf_children_effect = yes
		create_olaf_children_effect = yes

		create_character = { # TILDA
			name = "Tilda"
			female = yes
			age = 33
			culture = ROOT
			religion = ROOT
			trait = brilliant_strategist
			trait = cavalry_leader
			trait = flat_terrain_leader
			trait = master_of_flame
			trait = mystic
			trait = prevent_marriage
			trait = quick
			trait = strong
			trait = shrewd
			dynasty = 300000
		}
		new_character = {
			set_character_flag = is_ancient_one			
			set_character_flag = originated_from_chinese_court
			set_character_flag = immune_tuberculosis
			set_character_flag = immune_bubonic_plague
			character_event = { id = ACS.00006 } # Moves to the mercenary band
			create_sakya_child_effect = yes
			create_sakya_child_effect = yes
			create_sakya_child_effect = yes
		}

		# KHALGA
		create_character = {
			name = Khalga
			female = no
			age = 5
			culture = event_target:olaf_the_killer
			religion = event_target:olaf_the_killer
			dynasty = none
			trait = fair
			trait = genius
			trait = byakugan
			trait = strong
			trait = prevent_marriage
			trait = khalga_blood
			trait = duelist
			trait = gamer
			trait = socializer
			trait = strategist
			trait = seducer
		}
		new_character = {
			set_character_flag = is_khalga
			set_character_flag = society_join_block
			set_character_flag = originated_from_chinese_court # to prevent to go to China
			set_character_flag = wolf_blood_first_generation
			set_character_flag = immune_tuberculosis
			set_character_flag = immune_bubonic_plague
			add_character_modifier = {
				name = wolf_child
				duration = -1
			}
			character_event = { id = ACS.00006 days = 3 }
		}

		# VEE
		create_character = {
			name = Vee
			dynasty = 300001
			female = yes
			age = 16
			culture = event_target:olaf_the_killer
			religion = event_target:olaf_the_killer
			trait = fair
			trait = strong
			trait = mystic
			trait = mangekyo_sharingan
			trait = syrena
			trait = kind
			trait = lustful
			trait = diligent
			trait = proud
			trait = vee_blood
			trait = seductress
			trait = prevent_marriage
			trait = legit_bastard
			trait = ambitious
			trait = cynical
			trait = erudite
			trait = gregarious
			trait = lefthanded
		}
		new_character = {
			set_character_flag = is_vee	
			set_character_flag = society_join_block	
			set_character_flag = originated_from_chinese_court
			set_character_flag = immune_tuberculosis
			set_character_flag = immune_bubonic_plague
			set_father = event_target:olaf_the_killer
			culture = event_target:olaf_the_killer
		}

		# Recalculate the governor title
		e_vee_governor = {
			grant_title = PREV
			gender_succ = enatic_cognatic
			succession = primogeniture
		}
	}
}

# ACS.00004 - Notification for the user
narrative_event = {
	id = ACS.00004
	title = ACS_00004_TITLE
	desc = ACS_00004_DESC
	picture = GFX_evt_emissary_byzantine
	is_triggered_only = yes

	option = {
		name = EXCELENT		
	}
}

# ACS.00006 - Find the current leader of the Pentaghast and Sakya mercenary band
character_event = {
	id = ACS.00006
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					has_character_flag = is_ancient_one
					has_character_flag = is_khalga
				}
			}
			random_character = {
				limit = { has_landed_title = d_mercenary_sakya }
				character_event = { id = ACS.00007 }				
			}
		}
	}
}

# ACS.00007 - Pentaghast-Sakya leader receives Olaf-Tilda/Vee-Khalga
character_event = {
	id = ACS.00007
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				FROM = {
					has_character_flag = is_ancient_one
				}
			}
			FROM = {
				move_character = ROOT
				remove_trait = prevent_marriage
				d_mercenary_sakya = {
					grant_title = PREV
					set_defacto_liege = THIS
				}
			}
			break = yes
		}
		if = {
			limit = {
				FROM = {
					has_character_flag = is_khalga
				}
			}
			FROM = {
				move_character = ROOT
				culture = ROOT
				religion = ROOT
			}
			break = yes
		}
	}
}

# ACS.00008 - AVAILABLE

# ACS.00009 - Marry every single Pentaghast and Sakya male
character_event = {
	id = ACS.00009
	is_triggered_only = yes
	hide_window = yes
	only_men = yes

	trigger = {
		OR = {
			dynasty = 300001
			dynasty = 300000
		}
		can_marry = yes
		is_married = no
		is_adult = yes
		age > 23
		ai = yes
	}

	immediate = {
		create_character = {
			random_traits = yes
			culture = ROOT
			religion = ROOT
			dynasty = none
			female = yes
			age = 18
		}
		new_character = {
			add_spouse = ROOT
		}
	}
}

# ACS.00010 - AVAILABLE
# ACS.00011 - AVAILABLE
# ACS.00012 - AVAILABLE

###################
## KHALGA TRAVEL ##
###################
# ACS.00013 - Khalga travelling every 5 years
character_event = {
	id = ACS.00013
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_khalga
	min_age = 16

	immediate = {
		# Return all titles to liege
		liege = {
			save_event_target_as = khalga_liege
		}
		any_demesne_title = {
			gain_title = event_target:khalga_liege
		}

		# And... kill khalga
		death = { death_reason = death_missing }
	}
}

# ACS.00014 - Ensure inherit Khalga or Vee trait for cuckoo
character_event = {
	id = ACS.00014
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			true_father_even_if_dead = {
				trait = khalga_blood
			}
			true_father_even_if_dead = {
				trait = vee_blood
			}
		}
	}

	immediate = {
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = khalga_blood
				}
			}
			add_trait = khalga_blood			
		}
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = vee_blood
				}
			}
			add_trait = vee_blood			
		}
	}
}

# ACS.00015 - Reduce the troups of the under siege main pentaghast province
character_event = {
	id = ACS.00015
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		ROOT = {
			is_offmap_governor = offmap_vee
		}
	}
	
	immediate = {
		spawn_unit = {
			province = location
			owner = ROOT
			troops = {
				horse_archers = { 10000 10000 }
				light_infantry = { 10000 10000 }
				knights = { 10000 10000 }
			}
			attrition = 0.0
			disband_on_peace = yes
			maintenance = no
		}
		spawn_fleet = {
			province = closest_to_capital
			owner = ROOT
			troops = {
				galleys = { 200 200 }
			}
			disband_on_peace = yes
		}
	}
}

# ACS.00016 - AVAILABLE

#########################
## KHALGA RESURRECTION ##
#########################
# ACS.00017 - Resurrect Khalga and move him to a new ruler
character_event = {
	id = ACS.00017
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_khalga

	trigger = {
		NOT = { has_character_flag = dont_resucite }
	}

	immediate = {
		# Select a suitable female
		random_playable_ruler = {
			limit = {
				is_female = yes
				is_landed = yes
				is_pregnant = no
				age >= 16
				age <= 50
			}
			save_event_target_as = khalga_lover
			create_khalga_effect = yes
			impregnate_cuckoo = event_target:chr_khalga
			add_lover = event_target:chr_khalga
			narrative_event = { id = ACS.00018 }
		}	
	}
}

# ACS.00018 - Message to female ruler. Khalga seduction
narrative_event = {
	id = ACS.00018
	title = ACS_00018_TITLE
	desc = ACS_00018_DESC
	picture = GFX_evt_emissary_byzantine
	is_triggered_only = yes

	option = {
		name = EXCELLENT		
	}

}

# ACS.00019 - AVAILABLE

# ACS.00020 - AVAILABLE

# ACS.00021 - AVAILABLE

##########################
## VEE LIFECYCLE EVENTS ##
##########################
# ACS.00025 - Vee migrates to another body
character_event = {
	id = ACS.00025
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		ROOT = {
			if = {
				limit = {
					age >= 40
				}
				death = { death_reason = death_poor_health }
			}
		}
	}
}

# ACS.00028 - AVAILABLE

##############################################
# ACS.00029 - Dojutsu inheritance mechanics ##
##############################################
character_event = {
	id = ACS.00029
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			trait = khalga_blood
			trait = vee_blood
		}
	}

	immediate = {
		# BYAKUGAN INHERITANCE BOTH
		if = {
			limit = {
				OR = {
					has_character_flag = is_vee
					has_character_flag = is_khalga
				}
			}
			break = yes
		}
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = khalga_blood
				}
				mother_even_if_dead = {
					trait = khalga_blood
				}							
			}
			set_character_flag = evaluated_both_byakugan
			random_list = {
				15 = { add_trait = byakugan }
				85 = { }
			}			
		}
		# BYAKUGAN INHERITANCE
		if = {
			limit = {
				NOT = { has_character_flag = evaluated_both_byakugan }
				OR = {
					true_father_even_if_dead = {
						trait = khalga_blood
					}
					mother_even_if_dead = {
						trait = khalga_blood
					}
				}				
			}
			random_list = {
				7 = { add_trait = byakugan }
				93 = { }
			}			
		}

		# SHARINGAN INHERITANCE
		if = {
			limit = {				
				true_father_even_if_dead = {
					trait = vee_blood
				}
				mother_even_if_dead = {
					trait = vee_blood
				}
			}
			set_character_flag = evaluated_both_sharingan
			random_list = {
				15 = { add_trait = sharingan }
				85 = { }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = evaluated_both_sharingan }
				OR = {
					true_father_even_if_dead = {
						trait = vee_blood
					}
					mother_even_if_dead = {
						trait = vee_blood
					}
				}
			}
			random_list = {
				7 = { add_trait = sharingan }
				93 = { }
			}
		}

		# Checks if has the two bloodlines
		if = {
			limit = {
				trait = khalga_blood
				trait = vee_blood
			}
			random_list = {
				999999 = {
					add_trait = depressed
					add_trait = incapable
					add_trait = infirm
					add_trait = lunatic
					add_trait = maimed
					add_trait = scarred_high
					add_trait = wounded
					add_trait = blinded
					add_trait = clubfooted
					add_trait = dwarf
					add_trait = harelip
					add_trait = hunchback
					add_trait = imbecile
					add_trait = inbred
					add_trait = lisp
					add_trait = slow
					add_trait = stutter
					add_trait = weak
				}
				1 = {
					add_trait = rinnegan
				}
			}
		}
	}
}

# ACS.00030 - AVAILABLE

# ACS.00034 - Resurrect Vee if she dies
character_event = {
	id = ACS.00034
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		offmap_vee = {
			governor = {
				save_event_target_as = pentaghast_leader
				create_character = {
					name = Vee
					female = yes
					culture = event_target:pentaghast_leader
					religion = event_target:pentaghast_leader
					age = 0
					trait = fair
					trait = strong
					trait = mystic
					trait = mangekyo_sharingan
					trait = syrena
					trait = kind
					trait = lustful
					trait = diligent
					trait = proud
					trait = vee_blood
					trait = seductress
					trait = prevent_marriage
					trait = ambitious
					trait = cynical
					trait = erudite
					trait = gregarious
					trait = lefthanded
					dynasty = none
				}
				new_character = {
					set_character_flag = is_vee
					set_character_flag = society_join_block	
					set_character_flag = originated_from_chinese_court
					set_character_flag = immune_tuberculosis
					set_character_flag = immune_bubonic_plague
					set_father = event_target:pentaghast_leader
				}
			}
			set_status = vee_status_newborn
		}
	}
}

# ACS.00035 - AVAILABLE

########################
##    VEE PARTNER     ##
########################
# ACS.00036 - Search a spouse for Vee if she isn't married
character_event = {
	id = ACS.00036
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_vee

	trigger = {
		is_married = no
		age >= 16
	}

	immediate = {
		character_event = { id = ACS.00039 days = 15 } # Flag for the winner
		character_event = { id = ACS.00040 days = 30 } # Notify the winner
		liege = {
			save_event_target_as = vee_liege
		}
		
		any_character = {
			limit = {
				can_marry = yes
				is_inaccessible_or_incapable_trigger = no
				religion_group = event_target:vee_liege
				NOT = { dynasty = 300001 }
				age = 16
				NOT = { age = 50 }
				is_female = no
				NOT = { trait = celibate }
				NOT = { trait = eunuch }
				NOT = { has_character_flag = is_khalga }
				OR = {
					real_tier = EMPEROR
					real_tier = KING
					real_tier = DUKE
					real_tier = COUNT
					real_tier = BARON
				}
				is_landed = yes
				is_patrician = no
			}
			letter_event = { id = ACS.00037 } # Notification for participation
		}
	}
}

# ACS.00037 - Notification for participation
letter_event = {
	id = ACS.00037
	desc = ACS_00037_DESC
	is_triggered_only = yes

	option = {
		name = ACS_00037_OPT_A
		set_character_flag = evaluation_for_vee
		will_not_marry_effect = yes
		character_event = { id = ACS.00038 }
	}

	option = {
		name = ACS_00037_OPT_B
	}
}

# ACS.00038 - Assign score for participants
character_event = {
	id = ACS.00038
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		character_event = { id = ACS.00042 days = 45 } # Clean flags, trait and modifiers
		random_list = {
			20 = { # EMPEROR list
				set_character_flag = evaluation_vee_score_5
				modifier = {
					factor = 0
					OR = {
						real_tier = KING
						real_tier = DUKE
						real_tier = COUNT
						real_tier = BARON
					}
				}
			}			
			20 = { # KING tier list
				set_character_flag = evaluation_vee_score_4
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = DUKE
						real_tier = COUNT
						real_tier = BARON
					}
				}
			}
			20 = { # DUKE tier list
				set_character_flag = evaluation_vee_score_3
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = KING
						real_tier = COUNT
						real_tier = BARON
					}
				}
			}
			20 = { # COUNT tier list
				set_character_flag = evaluation_vee_score_2
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = KING
						real_tier = DUKE
						real_tier = BARON
					}
				}
			}
			20 = { # BARON heir tier list
				set_character_flag = evaluation_vee_score_1
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = KING
						real_tier = DUKE
						real_tier = COUNT
					}
				}
			}
		}
	}
}

# ACS.00039 - Assign a flag for the winner
character_event = {
	id = ACS.00039
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_5
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_5
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_4
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_4
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_3
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_3
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_2
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_2
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_1
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_1
			set_character_flag = tournament_vee_winner
			break = yes
		}
	}
}

# ACS.00040 - Select the winner and send a notification
character_event = {
	id = ACS.00040
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_character = {
			limit = {
				has_character_flag = tournament_vee_winner
			}
			narrative_event = { id = ACS.00041 }
		}
	}
}

# ACS.00041 - Winner receives a fancy notification
narrative_event = {
	id = ACS.00041
	title = ACS_00041_TITLE
	desc = ACS_00041_DESC
	picture = GFX_evt_emissary_byzantine
	is_triggered_only = yes

	option = {
		name = OK
		FROMFROM = { # Vee
			add_spouse = ROOT
			culture = ROOT
			religion = ROOT
		}
		ROOT = {
			add_character_modifier = {
				name = married_with_vee
				duration = -1
			}
			add_trait = ambitious
		}
	}
}

# ACS.00042 - Clean flags, trait and modifiers
character_event = {
	id = ACS.00042
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_character_modifier = will_not_marry
		remove_trait = cannot_marry
		clr_character_flag = tournament_vee_winner
		clr_character_flag = evaluation_for_vee
		clr_character_flag = evaluation_vee_score_1
		clr_character_flag = evaluation_vee_score_2
		clr_character_flag = evaluation_vee_score_3
		clr_character_flag = evaluation_vee_score_4
		clr_character_flag = evaluation_vee_score_5
	}
}

# ACS.00045 - Vee has childs every 2 years to balance Khalga's byakugan
character_event = {
	id = ACS.00045
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	trigger = {
		is_married = yes
		is_pregnant = no
	}

	immediate = {
		random_spouse = {
			save_event_target_as = vee_spouse
		}
		ROOT = {
			impregnate = event_target:vee_spouse
		}
	}
}

# ACS.00046 - Vee returns to dynasty head if husband dies
character_event = {
	id = ACS.00046
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_spouse = {
			has_character_flag = is_vee
		}
	}

	immediate = {
		ROOT = {
			random_spouse = {
				limit = {
					has_character_flag = is_vee
				}
				offmap_vee = {
					governor = {
						save_event_target_as = dynasty_target
					}
				}
				move_character = event_target:dynasty_target
				any_child = {
					limit = {
						age <= 15
						is_landed = no
						is_ruler = no
					}
					move_character = event_target:dynasty_target
				}
			}
		}
	}
}

# ACS.00047 - AVAILABLE

##############################
## MANGEKYO EVENTS ###########
##############################
# ACS.00048 - Choice for the mangekyo every 5 years
narrative_event = {
	id =  ACS.00048
	title = ACS_00048_TITLE
	desc = ACS_00048_DESC
	picture = GFX_evt_bloodlines
	is_triggered_only = yes

	trigger = {
		trait = sharingan
		trait = ambitious
		NOT = { trait = mangekyo_sharingan }
		OR = {
			num_of_friends >= 1
			num_of_lovers >= 1
		}
	}

	option = {
		name = ACS_00048_OPT_A
		ai_chance = {
			factor = 99
			modifier = {
				factor = 0
				trait = craven
			}
		}
		trigger = {
			num_of_friends >= 1
		}
		random_friend = {
			set_character_flag = mangekyo_friend
			letter_event = { id = ACS.00049 }
		}
	}

	option = {
		name = ACS_00048_OPT_B
		ai_chance = {
			factor = 99
			modifier = {
				factor = 0
				trait = craven
			}
		}
		trigger = {
			num_of_lovers >= 1
		}
		random_lover = {
			set_character_flag = mangekyo_lover
			letter_event = { id = ACS.00049 }
		}
	}

	option = {
		name = ACS_00048_OPT_C
		ai_chance = {
			factor = 1
		}
	}
}

# ACS.00048 - A letter for the defender. Tag combatants
letter_event = {
	id = ACS.00049
	desc = ACS_00049_DESC
	is_triggered_only = yes

	immediate = {
		save_event_target_as = combatant_2
		narrative_event = { id = ACS.00051 days = 3 }
		FROM = {
			save_event_target_as = combatant_1
			narrative_event = { id = ACS.00050 days = 3 }
			character_event = { id = ACS.00052 days = 4 } # The DUEL
		}
	}

	option = {
		name = ACS_00049_OPT_A
	}
}

# ACS.00050 - The attacker decides
narrative_event = {
	id = ACS.00050
	title = ACS_00050_TITLE
	desc = ACS_00050_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = ACS_00050_OPT_A
	}
}

# ACS.00051 - The defender decides
narrative_event = {
	id = ACS.00051
	title = ACS_00051_TITLE
	desc = ACS_00051_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = ACS_00051_OPT_A
	}
}

##################################################
## This should end with the dead of one of them ##
##################################################

character_event = {
	id = ACS.00052 # HFP.10100
	is_triggered_only = yes
	hide_window = yes
	trigger = {        
	}

	immediate = {     
		#Chooses a weapon for mainly loc purposes (but has a tiny effect on outcomes, too)...
		set_dueling_weapon_effect = yes
		event_target:combatant_2 = { set_dueling_weapon_effect = yes } 
		#Chooses a body part for injury (if it occurs), also for loc purposes (effect handles both characters)
		set_potential_injury_flag_effect = yes

		#Scripted effect requiring event-targets combatant_1 & combatant_2! RAW NUMBERS...
		evaluate_duel_result_score_effect = yes

		#Room for extra special calculations... (based on traits, and other special circumstances?)
		evaluate_extra_duel_result_score_effect = yes

		#Send the correct result event (from random_list)...
		send_mangekyo_duel_result_event_effect = yes 
	}
}

# ACS.00053 - LETHAL for both...
narrative_event = {
	id = ACS.00053
	title = ACS_00053_TITLE
	desc = ACS_00053_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = OK
	}  
}

# ACS.00054 - LETHAL for defender...
narrative_event = {
	id = ACS.00054
	title = ACS_00054_TITLE
	desc = ACS_00054_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = OK
	}  
}

# ACS.00055 - LETHAL for attacker...
narrative_event = {
	id = ACS.00055
	title = ACS_00055_TITLE
	desc = ACS_00055_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = OK
	}  
}

############################
## VEE DIPLOMATIC OPTIONS ##
############################
# ACS.00056 - Vee biannual tombola
character_event = {
	id = ACS.00056
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_vee

	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		vee_can_do_council_work_trigger = yes
	}

	immediate = {
		random_list = {
			50 = { # Increase opinion in a random vassal
				character_event = { id = ACS.00060 }
			}
			50 = { # Increase the can sentiment
				character_event = { id = ACS.00063 }
				modifier = {
					factor = 0
					is_nomadic = no
				}

			}
			#25 = { character_event = { id = ACS.00062 } }
			#25 = { character_event = { id = ACS.00063 } }
		}
		#random_list = {
			#25 = { character_event = { id = ACS.00064 } }
			#25 = { character_event = { id = ACS.00065 } }
			#25 = { character_event = { id = ACS.00066 } }
			#25 = { character_event = { id = ACS.00067 } }
		#}
	}
}


# ACS.00060 - Vee increase opinion in vassal
character_event = {
	id = ACS.00060
	is_triggered_only = yes
	hide_window = yes

	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		vee_can_do_council_work_trigger = yes
	}

	immediate = {
		liege = {
			random_vassal = {
				limit = {
					is_priest = no
					NOT = { is_liege_of = ROOT }
					NOT = { character = ROOT }
					OR = {
						primary_title = { higher_tier_than = BARON }
						same_liege = ROOT
					}
				}
				narrative_event = { id = ACS.00061 days = 7 }
			}
		}
	}
}

# ACS.00061: Inform the noble
narrative_event = {
	id = ACS.00061
	title = ACS_00061_TITLE
	desc = ACS_00061_DESC
	picture = GFX_evt_vee_diplo_notify
	border = GFX_event_narrative_frame_diplomacy
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		hidden_tooltip = {
			FROM = {
				liege = { narrative_event = { id = ACS.00062 } }
			}
		}
	}
}

# ACS.00062: The liege is informed of the success
narrative_event = {
	id = ACS.00062
	title = ACS_00062_TITLE
	desc = ACS_00062_DESC
	picture = GFX_evt_vee_diplo_notify
	border = GFX_event_narrative_frame_diplomacy
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EXCELLENT
		FROM = {
			opinion = {
				modifier = opinion_improved_relations
				who = ROOT
				years = 4
			}
		}
	}
}

# ACS.00063 - Vee increase clan sentiment in vassal
character_event = {
	id = ACS.00063
	is_triggered_only = yes
	hide_window = yes

	min_age = 16
	capable_only = yes
	prisoner = no

	trigger = {
		vee_can_do_council_work_trigger = yes
		liege = { is_nomadic = yes }
	}
	
	immediate = {
		liege = {
			clan_title = {
				save_event_target_as = liege_clan
			}
		}
		random_vassal = {
			limit = {
				is_nomadic = yes
			}
			save_event_target_as = target_chief
		}

		event_target:target_chief = {
			show_scope_change = no
			clan_title = {
				show_scope_change = no
				clan_opinion = {
					who = event_target:liege_clan
					modifier = clan_propaganda_effort
					years = 5
				}
			}
		}

		liege = { narrative_event = { id = ACS.00064 } }
	}
}

# ACS.00064 - Vee clan sentiment. Notification to liege
narrative_event = {
	id = ACS.00064
	title = ACS_00062_TITLE
	desc = ACS_00064_DESC
	picture = GFX_evt_vee_diplo_notify
	border = GFX_event_narrative_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EXCELLENT
		
		tooltip = {
			event_target:target_chief = {
				show_scope_change = no
				clan_title = {
					show_scope_change = no
					clan_opinion = {
						who = event_target:liege_clan
						modifier = clan_propaganda_effort
						years = 5
					}
				}
			}
		}
	}
}

# ACS.00090 - Varkana migration events
character_event = {
	id = ACS.00090
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_offmap_governor = offmap_vee
	}

	immediate = {
		if = {
			limit = {
				NOT = { government = nomadic_government }
			}
			primary_title = {
				set_title_nomad = { title = THIS status = no }
			}

			set_government_type = feudal_government
			prestige = 100
			set_government_type = nomadic_government
		}

		random_province = {
			limit = {
				is_land = yes
			}
			save_event_target_as = new_capital_province
			holder_scope = {
				narrative_event = { id = ACS.00091 }
			}
			ROOT = {
				capital = event_target:new_capital_province
			}
		}
	}
}

# ACS.00091 - Province holder receives visit message
narrative_event = {
	id = ACS.00091
	title = ACS_00091_TITLE
	desc = ACS_00091_DESC
	picture = GFX_evt_china_golden_age
	border = GFX_event_narrative_frame_diplomacy
	is_triggered_only = yes

	option = {
		name = ACS_00091_OPT_A
		trigger = {
			wealth = 501
		}
		wealth = -500
		prestige = 500
		FROM = { wealth = 500 }
		add_offmap_currency = { offmap = offmap_vee value = 50 }
		ai_chance = {
			factor = 90
		}
	}
	option = {
		name = ACS_00091_OPT_B
		trigger = {
			wealth = 251
		}
		wealth = -250
		prestige = 250
		FROM = { wealth = 250 }
		add_offmap_currency = { offmap = offmap_vee value = 25 }
		ai_chance = {
			factor = 9
		}
	}
	option = {
		name = ACS_00091_OPT_C
		wealth = -125
		prestige = 125
		FROM = { wealth = 125 }
		add_offmap_currency = { offmap = offmap_vee value = 12 }
		ai_chance = {
			factor = 1
		}
	}
}


#Sending gift
character_event = {
	id = ACS.00092
	hide_window = yes
	is_triggered_only = yes
	immediate = { FROMFROM = { letter_event = { id = ACS.00093 } } }
}

letter_event = {
	id = ACS.00093
	desc = EVTDESC_JD_20024
	border = GFX_event_letter_frame_diplomacy

	is_triggered_only = yes

	option = { 
		name = EVTOPTA_JD_20024
		
		sound_effect = china_grace_gain
		add_offmap_currency = {
			offmap = offmap_china
			value = 450
		}
	}
}

#Response for sending a tribute character to China...
letter_event = {
	id = ACS.00094
	desc = EVTDESC_JD_10050
	border = GFX_event_letter_frame_diplomacy

	is_triggered_only = yes

	option = { 
		name = {
			text = EVTOPTA_JD_10050_bad
			trigger = {
				has_character_flag = sent_bad_tribute
				NOT = { is_close_relative = event_target:person_sent_as_tribute }
			}
		}
		name = {
			text = EVTOPTA_JD_10050_decent
			trigger = {
				has_character_flag = sent_decent_tribute
				NOT = { is_close_relative = event_target:person_sent_as_tribute }
			}
		}
		name = {
			text = EVTOPTA_JD_10050_great
			trigger = {
				has_character_flag = sent_great_tribute
				NOT = { is_close_relative = event_target:person_sent_as_tribute }
			}
		}
		name = {
			text = EVTOPTA_JD_10050_family
			trigger = { is_close_relative = event_target:person_sent_as_tribute }
		}

		event_target:person_sent_as_tribute = { show_portrait = yes }

		clr_character_flag = sent_bad_tribute
		clr_character_flag = sent_decent_tribute
		clr_character_flag = sent_great_tribute
		clr_character_flag = sent_eunuch_tribute
		clr_character_flag = sent_concubine_tribute
	}
}
