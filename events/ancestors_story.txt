NAMESPACE = ACS

########################
## TIAMAT EVENT CHAIN ##
########################
# ACS.00001 - Tiamat comet in the sky
narrative_event = {
	id = ACS.00001
	title = ACS_00001_TITLE
	desc = ACS_00001_DESC
	is_triggered_only = yes
	ai = no
	picture = GFX_evt_tiamat

	trigger = {
		NOT = { has_global_flag = comet_tiamat }
		OR = {
			multiplayer = no
			AND = {
				multiplayer = yes
				is_multiplayer_host_character = yes
			}
		}
	}

	option = {
		name = ACS_00001_OPT_A
		set_global_flag = comet_tiamat

		random_character = {
			limit = {
				has_landed_title = c_venezia
				is_merchant_republic = yes
			}
			character_event = { id = ACS.00002 } # Kill a entire patrician family
		}
		random_character = { # Spawn for another merchant republic
			limit = {
				is_merchant_republic = yes
			}
			character_event = { id = ACS.00002 days = 5 } # Kill a entire patrician family
		}

		character_event = { id = ACS.00003 days = 32 } # Player is notified about Tiamat devastation

		hidden_tooltip = { # Loop for the provinces
			set_variable = { which = provs value = 5 }
			while = {
				limit = {
					check_variable = {
						which = provs
						value = 1
					}
				}
				subtract_variable = {
					which = provs
					value = 1
				}
				random_province = {
					limit = {
						not = { owner = { character = ROOT } }
						is_land =  yes
					}
					add_province_modifier = { name = devastated_by_tiamat years = 20 }
					spawn_disease = tuberculosis
					any_province_character = {
						death = { death_reason = death_murder_unknown_combustion }
					}
					any_province_holding = {
						limit = {
							is_capital = no
						}
						destroy_settlement = yes
					}
					any_neighbor_province = {
						limit = {
							is_land = yes
						}
						spawn_disease = tuberculosis
					}
				}
			}
		}
	}
}

# ACS.00002 - Kill a entire patrician family
character_event = {
	id = ACS.00002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = infiltered_venezia }
	}

	immediate = {
		set_global_flag = infiltered_venezia
		
		any_vassal = {
			set_character_flag = check_for_dissapears
		}

		random_vassal = {
			limit = {
				is_patrician = yes
				ai = yes
			}
			any_dynasty_member = {
				death = {
					death_reason = death_murder_unknown
				}
			}
			death = {
				death_reason = death_murder_unknown
			}
		}
		character_event = { id = ACS.00043 days = 3 } # Select the new Patrician
	}	
}

# ACS.00003 - Player is notified about Tiamat devastation
character_event = {
	id = ACS.00003
	desc = ACS_00003_DESC
	picture = GFX_evt_emissary_byzantine
	is_triggered_only = yes

	option = {
		name = OK
	}
}

#####################
## THE SPAWN EVENT ##
#####################
# ACS.00004 - Spawn Senua, Olaf and Tilda and parents
character_event = {
	id = ACS.00004
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_name = "Olaf"
		add_trait = cruel
		add_trait = ambitious
		add_trait = elusive_shadow
		add_trait = shrewd
		add_trait = quick
		add_trait = hunter
		add_trait = diligent
		add_trait = lustful
		add_trait = robust
		add_trait = strategist
		add_trait = socializer
		add_trait = hedonist
		add_trait = seducer
		set_character_flag = is_olaf
		set_character_flag = originated_from_chinese_court
		set_character_flag = immune_tuberculosis
		join_society = pentaghast_society
		set_society_grandmaster = yes
		dynasty = 300001
		save_event_target_as = olaf_the_killer

		create_character = {
			name = "Tilda"
			female = yes
			age = 33
			culture = scottish
			religion = tengri_pagan
			trait = brilliant_strategist
			trait = cavalry_leader
			trait = flat_terrain_leader
			trait = master_of_flame
			trait = mystic
			trait = prevent_marriage
			trait = quick
			trait = strong
			trait = shrewd
		}
		new_character = {
			set_character_flag = is_ancient_one			
			set_character_flag = originated_from_chinese_court
			set_character_flag = immune_tuberculosis
			culture = khazar
			dynasty = 300000
			character_event = { id = ACS.00006 } # Moves to the mercenary band
		}

		# Olaf Dynasty members
		create_character = {
			age = 60
			culture = greek
			religion = ishtar_religion
			trait = ambitious
			trait = shrewd
			trait = physician
			trait = diligent
			trait = lustful
			trait = grey_eminence
			trait = administrator
			dynasty = 300001
		}
		new_character = {
			save_event_target_as = olaf_father
		}
		create_character = {
			age = 55
			female = yes
			culture = greek
			religion = ishtar_religion
			trait = fair
			trait = genius
			trait = shrewd
			trait = physician
			trait = diligent
			trait = midas_touched
			trait = administrator
			dynasty = none
		}
		new_character = {
			save_event_target_as = olaf_mother
		}
		create_character = {
			age = 30
			culture = greek
			religion = ishtar_religion
			trait = fair
			trait = genius
			trait = shrewd
			trait = physician
			trait = diligent
			trait = midas_touched
			trait = administrator
			dynasty = 300001
		}
		new_character = {
			set_mother = event_target:olaf_mother
			set_father = event_target:olaf_father
			save_event_target_as = olaf_brother
		}
		event_target:olaf_the_killer = {
			set_mother = event_target:olaf_mother
			set_father = event_target:olaf_father
		}
		# Olaf purges his family
		event_target:olaf_father = {
			death = { death_reason = death_murder_unknown killer = event_target:olaf_the_killer }
		}
		event_target:olaf_mother = {
			death = { death_reason = death_murder_unknown killer = event_target:olaf_the_killer }
		}
		event_target:olaf_brother = {
			death = { death_reason = death_murder_unknown killer = event_target:olaf_the_killer }
		}

		set_variable = { which = olaf_sisters value = 10 }
		while = {
			limit = {
				check_variable = {
					which = olaf_sisters
					value = 1
				}
			}
			subtract_variable = {
				which = olaf_sisters
				value = 1
			}
			create_character = {
				trait = ambitious
				trait = fair
				trait = genius
				trait = elusive_shadow
				trait = seductress
				female = yes
				culture = greek
				religion = FROM
			}
			new_character = {
				join_society = pentaghast_society
				society_rank_up = 3
				set_character_flag = originated_from_chinese_court
				set_character_flag = immune_tuberculosis
				set_father = event_target:olaf_father
				set_mother = event_target:olaf_mother
				dynasty = 300001
			}
		}

		# KHALGA
		create_character = {
			name = Khalga
			female = no
			age = 0
			culture = pictish
			religion = ROOT
			dynasty = none
			trait = fair
			trait = genius
			trait = byakugan
			trait = strong
			trait = prevent_marriage
			trait = khalga_blood
			trait = bastard
		}
		new_character = {
			set_character_flag = is_khalga
			set_character_flag = society_join_block
			set_character_flag = originated_from_chinese_court # to prevent to go to China
			set_character_flag = wolf_blood_first_generation
			set_character_flag = immune_tuberculosis
			add_character_modifier = {
				name = wolf_child
				duration = -1
			}
			character_event = { id = ACS.00006 days = 3 }
		}
		# VEE
		create_character = {
			name = Vee
			dynasty = 300001
			dna = qqovluyitrm
			female = yes
			age = 0
			culture = pictish
			religion = ROOT
			trait = fair
			trait = strong
			trait = mystic
			trait = wroth
			trait = sharingan
			trait = syrena
			trait = kind
			trait = lustful
			trait = diligent
			trait = proud
			trait = vee_blood
			trait = seductress
		}
		new_character = {
			set_character_flag = is_vee	
			set_character_flag = society_join_block	
			set_character_flag = originated_from_chinese_court
			set_character_flag = immune_tuberculosis
			set_father = event_target:olaf_the_killer
		}
	}
}

# ACS.00005 - Create characters for Pentaghast and Sakya
character_event = {
	id = ACS.00005
	hide_window = yes
	is_triggered_only = yes
	is_in_society = yes

	trigger = {
		OR = {
			society_member_of = pentaghast_society
			society_member_of = sakya_society
		}
		is_society_grandmaster = yes
	}

	immediate = {
		pentaghast_society = {
			any_society_member = { # Ranks up any society member
				limit = {
					prisoner = no
					NOT = { trait = incapable }
					is_in_society = yes
					society_rank < 3
					society_can_rank_up = yes
				}
				random_list = {
					75 = {}
					25 = { society_rank_up = 1 }
				}
			}
			if = { # Recruit more members
				limit = {
					num_of_society_members < 100
				}
				create_character = {
					female = 50
					culture = random
					dynasty = none
					religion = ROOT
				}
				new_character = {
					join_society = pentaghast_society
				}
			}
		}
		sakya_society = {
			any_society_member = { # Ranks up any society member
				limit = {
					prisoner = no
					NOT = { trait = incapable }
					is_in_society = yes
					society_rank < 3
					society_can_rank_up = yes
				}
				random_list = {
					75 = {}
					25 = { society_rank_up = 1 }
				}
			}
			if = { # Recruit more members
				limit = {
					num_of_society_members < 100
				}
				create_character = {
					female = 50
					culture = random
					dynasty = none
					religion = ROOT
				}
				new_character = {
					join_society = sakya_society
				}
			}
		}
	}
}

# ACS.00006 - Find the current leader of the Pentaghast and Sakya mercenary band
character_event = {
	id = ACS.00006
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					has_character_flag = is_ancient_one
					has_character_flag = is_khalga
				}
			}
			random_character = {
				limit = { has_landed_title = d_mercenary_sakya }
				character_event = { id = ACS.00007 }				
			}
			break = yes
		}
	}
}

# ACS.00007 - Pentaghast-Sakya leader receives Olaf-Tilda/Vee-Khalga
character_event = {
	id = ACS.00007
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				FROM = {
					has_character_flag = is_ancient_one
				}
			}
			FROM = {
				move_character = ROOT
				remove_trait = prevent_marriage
				d_mercenary_sakya = {
					grant_title = PREV
					set_defacto_liege = THIS
				}
				c_mercenary_sakya = {
					grant_title = PREV
					set_defacto_liege = THIS
				}
				join_society = sakya_society
				set_society_grandmaster = yes 					
			}
			break = yes
		}
		if = {
			limit = {
				FROM = {					
					has_character_flag = is_khalga
				}
			}
			FROM = {
				move_character = ROOT
				culture = ROOT
				religion = ROOT
			}
			break = yes
		}
	}
}

#########################################
# ACS.00012 - TRAVELING EVENT. GENERIC ##
#########################################
character_event = {
	id = ACS.00012
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			AND = {
				is_ruler = no
				is_inaccessible_or_incapable_trigger = no
			}
			AND = {
				has_character_flag = is_khalga
			}
		}
	}

	immediate = {
		location = {
			random_province = {
				limit = {
					is_land = yes
				}
				holder_scope = {
					save_event_target_as = target_holding_owner
				}
			}            
		}

		# Move to the new holding
		ROOT = {
			# Special events for khalga migration
			if = {
				limit = {
					has_character_flag = is_khalga
				}	
				liege = {
					save_event_target_as = khalga_liege
					set_character_flag = khalga_liege
				}
				any_demesne_title = {
					gain_title = event_target:khalga_liege
				}							
				character_event = { id = ACS.00014 days = 3 } # Select a courtier for pollinate from Khalga
				character_event = { id = ACS.00016 days = 6 } # Khalga assassinates the host
			}
			move_character = event_target:target_holding_owner
			religion = event_target:target_holding_owner
			culture = event_target:target_holding_owner
		}
	}
}

###################
## KHALGA TRAVEL ##
###################
# ACS.00013 - Khalga traveling every year
character_event = {
	id = ACS.00013
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_khalga
	min_age = 16

	immediate = {
		character_event = { id = ACS.00012 }
	}
}

# ACS.00014 - Select a courtier for pollinate from Khalga
character_event = {
	id = ACS.00014
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		location = {
			holder_scope = {
				random_courtier = {
					limit = {
						is_pregnant = no
						age >= 15
						age <= 50
						is_female = yes
						is_incapable = no
						NOT = { has_character_flag = is_vee }
					}
					character_event = { id = ACS.00015 }
				}
			}
		}		
	}
}

# ACS.00015 - The target is pollinated by Khalga
character_event = {
	id = ACS.00015
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_character_flag = khalga_lover
		impregnate_cuckoo = FROM
	}
}

# ACS.00016 - Khalga assassinates the host
character_event = {
	id = ACS.00016
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		location = {
			holder_scope = {
				death = { death_reason = death_murder_unknown killer = FROMFROM }
			}
		}
	}
}

#########################
## KHALGA RESURRECTION ##
#########################
# ACS.00017 - Select a character to resurrect Khalga if he dies
character_event = {
	id = ACS.00017
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_khalga

	immediate = {
		random_playable_ruler = {
			limit = {
				adventurer = no
				is_landed = yes 
				is_married = yes 
				age = 18
				is_female = no
			}
			character_event = { id = ACS.00018 }
		}
	}
}

# ACS.00018 - The character's wife is the new mother of Khalga
character_event = {
	id = ACS.00018
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_spouse  = {
			character_event = { id = ACS.00019 }            
		}        
	}
}

# ACS.00019 - Spawn a new instance of Khalga
character_event = {
	id = ACS.00019
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		create_character = {
			age = 0
			female = no
			culture = FROM
			religion = FROM
			dynasty = none
			trait = fair
			trait = genius
			trait = byakugan
			trait = khalga_blood
			trait = strong
			trait = prevent_marriage
			trait = bastard
		}
		new_character = {
			set_mother = ROOT           
			set_character_flag = is_khalga
			set_character_flag = society_join_block
			set_character_flag = originated_from_chinese_court # to prevent to go to China
			set_character_flag = wolf_blood_first_generation
			add_character_modifier = {
				name = wolf_child
				duration = -1
			}
			# Khalga takes the essence, so kill the mother
			mother = {
				death = { death_reason = death_childbirth }              
			}
		}
	}
}

# ACS.00020 - Ensure the correct portrait for Khalga
character_event = {
	id = ACS.00020
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_khalga

	immediate = {
		character_event = { id = ACS.00021 days = 3 }
	}
}

# ACS.00021 - Add the khalga trait few days after adulthood
character_event = {
	id = ACS.00021
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_khalga

	immediate = {
		add_trait = khalga_trait
	}
}

##########################
## VEE LIFECYCLE EVENTS ##
##########################
# ACS.00025 - Vee migrates to another body
character_event = {
	id = ACS.00025
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		ROOT = {
			if = {
				limit = {
					age >= 33
				}
				death = { death_reason = death_poor_health }
			}
		}
	}
}

# ACS.00028 - AVAILABLE

##############################################
# ACS.00029 - Dojutsu inheritance mechanics ##
##############################################
character_event = {
	id = ACS.00029
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			trait = khalga_blood
			trait = vee_blood
		}
	}

	immediate = {
		# BYAKUGAN INHERITANCE
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = khalga_blood
				}
			}
			random_list = {
				7 = { add_trait = byakugan }
				93 = { }
			}			
		}
		if = {
			limit = {
				mother_even_if_dead = {
					trait = khalga_blood
				}
			}
			random_list = {
				7 = { add_trait = byakugan }
				93 = { }
			}			
		}

		# SHARINGAN INHERITANCE
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = vee_blood
				}				
			}
			random_list = {
				7 = { add_trait = sharingan }
				93 = { }
			}
		}
		if = {
			limit = {
				mother_even_if_dead = {
					trait = vee_blood
				}				
			}
			random_list = {
				7 = { add_trait = sharingan }
				93 = { }
			}
		}

		# Checks if has the two bloodlines
		if = {
			limit = {
				trait = khalga_blood
				trait =  vee_blood
			}
			random_list = {
				999999 = {
					add_trait = malnourished
					add_trait = depressed
					add_trait = incapable
					add_trait = infirm
					add_trait = lunatic
					add_trait = maimed
					add_trait = scarred_high
					add_trait = wounded
					add_trait = blinded
					add_trait = clubfooted
					add_trait = dwarf
					add_trait = harelip
					add_trait = hunchback
					add_trait = imbecile
					add_trait = inbred
					add_trait = lisp
					add_trait = slow
					add_trait = stutter
					add_trait = weak
				}
				1 = {
					add_trait = rinnegan
					add_trait = genius
					add_trait = fair
				}
			}
		}
	}
}

# ACS.00030 - AVAILABLE


# ACS.00034 - Resurrect Vee if she dies
character_event = {
	id = ACS.00034
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		dynasty_head = {
			save_event_target_as = pentaghast_leader
			create_character = {
				female = yes
				culture = event_target:pentaghast_leader
				religion = event_target:pentaghast_leader
				age = 0
				trait = syrena
				trait = fair
				trait = sharingan
				trait = genius
				trait = brooding
				trait = playful
				trait = fussy
				trait = strong
				trait = groomed
				trait = vee_blood
				trait = prevent_marriage
				dynasty = event_target:pentaghast_leader
			}
			new_character = {
				set_character_flag = is_vee
				set_father = event_target:pentaghast_leader
			}
		}
	}
}

# ACS.00035 - AVAILABLE

# ACS.00036 - Select Vee in adulthood. Tournament
character_event = {
	id = ACS.00036
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_vee

	trigger = {
		is_married = no
	}

	immediate = {
		character_event = { id = ACS.00038 days = 60 } # Tournament start
		any_playable_ruler = { # Select suitable rulers for the tournament
			limit = {
				is_landed = yes
				can_marry = yes
				age = 16
				NOT = { age = 50 }
				is_inaccessible_or_incapable_trigger = no
				is_female = no
				NOT = { has_character_flag = attending_tournament }
				NOT = { has_character_flag = do_not_disturb }
				NOT = { trait = celibate }
				NOT = { trait = eunuch }
			}
			character_event = { id = ACS.00037 } # Characters receives letter
		}
		any_character = {
			limit = {
				is_heir = yes
				can_marry = yes
				age = 16
				NOT = { age = 50 }
				is_inaccessible_or_incapable_trigger = no
				is_female = no
				NOT = { has_character_flag = attending_tournament }
				NOT = { has_character_flag = do_not_disturb }
				NOT = { trait = celibate }
				NOT = { trait = eunuch }
				liege = { is_landed = yes }
			}
			narrative_event = { id = ACS.00037 } # Characters receives letterl
		}
	}
}

# ACS.00037 - Characters receives letter
narrative_event = {
	id = ACS.00037
	title = "TOURNAMENTTITLE"
	desc = "ACS_00037_DESC"
	picture = "GFX_evt_vee_tournament_invitation"
	is_triggered_only = yes

	trigger = { is_inaccessible_or_incapable_trigger = no }

	option = {
		name = "EVTOPTA70000"
		ai_chance = {
			factor = 100
			modifier  = {
				factor = 0.001
				ai = yes
				is_inaccessible_or_incapable_trigger = yes
			}
		}
		prestige = 100
		set_character_flag = attending_tournament
		set_character_flag = do_not_disturb
		set_character_flag = attending_vee_tournament
		any_war = {
			limit = {
				NOT = { 
					OR = {
						using_cb = crusade
						using_cb = new_crusade
					}
				}				
				attacker = { character = ROOT }
			}
			end_war = whitepeace
		}
		add_trait = travelling
		hidden_tooltip = { character_event = { id = 70999 days = 300 } } # Safety catch flag clearing
	}
	option = {
		name = "EVTOPTB70000"
		ai_chance = {
			factor = 0.1
		}
	}
}

# ACS.00038 - Tournament start
character_event = {
	id = ACS.00038
	is_triggered_only = yes
	hide_window = yes

	option = {
		name = "EVTOPTA70001"
		
		trigger = {}
		
		hidden_tooltip = {
			# Injuries
			any_character = {
				limit = {
					has_character_flag = attending_vee_tournament
				}
				character_event = { id = 70050 days = 1 random = 15 }
				#Set score
				character_event = { id = 70060 days = 46 }
			}
			# Select winner
			character_event = { id = ACS.00039 days = 50 } # Original : 70061
			# Notify winner
			narrative_event = { id = ACS.00040 days = 52 } # Marry with Vee
		}
	}
}

# ACS.00039 - Select the winner
character_event = {
	id = ACS.00039
	hide_window = yes	
	is_triggered_only = yes
	
	immediate = {
		random_character = {
			limit = {
				has_character_flag = tourney_score_15
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_15
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_14
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_14
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_13
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_13
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_12
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_12
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_11
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_11
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_10
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_10
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_09
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_09
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_08
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_08
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_07
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_07
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_06
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_06
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_05
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_05
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_04
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_04
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_03
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_03
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_02
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_02
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_01
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_01
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = tourney_score_00
				has_character_flag = attending_vee_tournament
			}
			clr_character_flag = tourney_score_00
			set_character_flag = tournament_vee_winner
		}
	}
}

# ACS.00040 - Winner marries with vee
narrative_event = {
	id = ACS.00040
	title = "TOURNAMENTTITLE"
	desc = "ACS_00040_DESC"
	picture = "GFX_evt_vee_tournament_invitation"
	is_triggered_only = yes

	immediate = {		
		random_character = {
			limit = {
				has_character_flag = tournament_vee_winner
			}
			add_spouse = ROOT
			add_lover = ROOT
			clr_character_flag = attending_vee_tournament
			clr_character_flag = do_not_disturb
			clr_character_flag = attending_tournament
			clr_character_flag = tournament_vee_winner
			remove_trait = travelling

			any_character = {
				limit = {
					has_character_flag = attending_vee_tournament
				}
				character_event = { id = ACS.00041 days = 3 } # Other characters receive notification
			}
		}

		# Vee effects
		remove_trait = prevent_marriage
		set_character_flag = married_in_tournament
	}

	option = {
		name = ACS_00040_OPT_A
		ai_chance = {
			factor = 100
		}
	}
}

# ACS.00041 - Other characters receive notification
character_event = {
	id = ACS.00041
	title = "TOURNAMENTTITLE"
	desc = "ACS_00041_DESC"
	picture = "GFX_evt_vee_tournament_invitation"
	is_triggered_only = yes

	immediate = {
		clr_character_flag = attending_tournament
		clr_character_flag = attending_vee_tournament
		clr_character_flag = do_not_disturb
		remove_trait = travelling
	}

	option = {
		name = ACS_00041_OPT_A
		ai_chance = {
			factor = 100
		}
	}
}

# ACS.00043 - Select the new patrician
character_event = {
	id = ACS.00043
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_vassal = {
			limit = {
				is_patrician = yes
				ai = yes
				NOT = { has_character_flag = check_for_dissapears }
			}
			any_demesne_title = {
				set_name = "Pentaghast" 
				set_short_name = "Pentaghast"
			}
			family_palace = {
				set_name = "Pentaghast"
				set_short_name = "Pentaghast"
			}
			character_event = { id = ACS.00004 }			
		} 
	}
} 

# ACS.00044 - New Helena appears
narrative_event = {
	id = ACS.00044
	title = ACS_00044_TITLE
	desc = ACS_00044_DESC
	picture = GFX_evt_enter_vee
	is_triggered_only = yes

	option = {
		name = OK
	}
}

# ACS.00045 - Vee has childs every 2 years to balance Khalga's byakugan
character_event = {
	id = ACS.00045
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		ROOT = {
			if = {
				limit = {
					is_married = yes
					is_pregnant = no
				}
				random_spouse = {
					save_event_target_as = vee_spouse
				}
				ROOT = {
					impregnate = event_target:vee_spouse
				}
			}
		}
	}
}

# ACS.00046 - Assign flag and trait if Vee spouse dies
character_event = {
	id = ACS.00046
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_spouse = {
			has_character_flag = is_vee
		}
	}

	immediate = {
		ROOT = {
			if = {
				limit = {
					any_spouse = {
						has_character_flag = is_vee
					}
				}
				random_spouse = {
					limit = {
						has_character_flag = is_vee
					}
					add_trait = prevent_marriage
				}
			}
		}
	}
}

#########################
## PRIMA MACULA EVENTS ##
#########################
# ACS.00047 - Assign flag and trait if Vee spouse dies
character_event = {
	id = ACS.00047
	hide_window = yes
	is_triggered_only = yes
	ai = no

	trigger = {
		NOT = { has_global_flag = prima_macula_spawned }
		total_years_played = 5
	}

	immediate = {
		set_global_flag = prima_macula_spawned
		random_province = {
			limit = {
				is_land = yes
			}
			spawn_disease = bubonic_plague
		}
	}
}
