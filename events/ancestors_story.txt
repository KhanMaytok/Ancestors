namespace = ACS

########################
## TIAMAT EVENT CHAIN ##
########################
# ACS.00001 - Tiamat comet in the sky
character_event = {
	id = ACS.00001
	is_triggered_only = yes
	hide_window = yes
	ai = no

	trigger = {
		NOT = { has_global_flag = comet_tiamat }
		is_the_main_player_trigger = yes
	}

	immediate = {
		set_global_flag = comet_tiamat
		any_player = {
			narrative_event = { id = ACS.00002 days = 20 } # Notification for human players
		}

		hidden_effect = {
			offmap_vee = {
				governor = {
					set_name = "Ivar"
					dynasty = 300001
					religion = hellenic_pagan
					culture = roman
					add_trait = cruel
					add_trait = ambitious
					add_trait = elusive_shadow
					add_trait = shrewd
					add_trait = quick
					add_trait = hunter
					add_trait = diligent
					add_trait = lustful
					add_trait = robust
					add_trait = strategist
					add_trait = socializer
					add_trait = hedonist
					add_trait = seducer
					set_character_flag = is_olaf
					set_character_flag = originated_from_chinese_court
					set_character_flag = immune_tuberculosis
					set_character_flag = immune_bubonic_plague
					save_event_target_as = olaf_the_killer

					create_character = { # Olaf spouse
						female = yes
						age = 18
						trait = grey_eminence
						trait = physician
						trait = scarred
						trait = fair
						trait = quick
						trait = shrewd
						trait = gardener
						trait = poet
						trait = diligent
						trait = lustful
						trait = proud
						trait = brave
						trait = erudite
						culture = han
						religion = hellenic_pagan
						dynasty = none
					}
					new_character = {
						add_lover = PREV
						add_spouse = PREV
						save_event_target_as = olaf_spouse
						set_character_flag = immune_tuberculosis
						set_character_flag = immune_bubonic_plague
					}

					create_olaf_children_effect = yes
					create_olaf_children_effect = yes

					create_character = { # TILDA
						name = "Tilda"
						female = yes
						age = 33
						culture = scottish
						religion = norse_pagan
						trait = brilliant_strategist
						trait = cavalry_leader
						trait = flat_terrain_leader
						trait = master_of_flame
						trait = mystic
						trait = prevent_marriage
						trait = quick
						trait = strong
						trait = shrewd
						dynasty = 300000
					}
					new_character = {
						save_event_target_as = is_ancient_one	
						set_character_flag = originated_from_chinese_court
						set_character_flag = immune_tuberculosis
						set_character_flag = immune_bubonic_plague
						d_mercenary_sakya = {
							grant_title = PREV
							set_defacto_liege = THIS
							succession = primogeniture
						}
						create_sakya_child_effect = yes
						create_sakya_child_effect = yes
						create_sakya_child_effect = yes
					}
					# Get a barony
					random_province = {
						limit = {
							climate = severe_winter
							port = yes
							num_of_settlements > 1
						}
						random_province_holding = {
							limit = {
								is_capital = no
							}
							convert_to = temple
							holder_scope = {
								abdicate_to = event_target:is_ancient_one
							}
						}
					}

					# VEE
					create_character = {
						name = Vee
						dynasty = 300001
						female = yes
						age = 16
						culture = event_target:olaf_the_killer
						religion = event_target:olaf_the_killer
						trait = fair
						trait = strong
						trait = mystic
						trait = mangekyo_sharingan
						trait = syrena
						trait = kind
						trait = lustful
						trait = diligent
						trait = proud
						trait = vee_blood
						trait = seductress
						trait = prevent_marriage
						trait = legit_bastard
						trait = ambitious
						trait = cynical
						trait = erudite
						trait = gregarious
						trait = lefthanded
					}
					new_character = {
						set_character_flag = is_vee	
						set_character_flag = society_join_block	
						set_character_flag = originated_from_chinese_court
						set_character_flag = immune_tuberculosis
						set_character_flag = immune_bubonic_plague
						set_father = event_target:olaf_the_killer
						culture = event_target:olaf_the_killer
					}
				}
				offmap_ruler = {
					dynasty = 300002
				}
			}
		}
	}
}

# ACS.00002 - Notification for the user
narrative_event = {
	id = ACS.00002
	title = ACS_00002_TITLE
	desc = ACS_00002_DESC
	picture = GFX_evt_tiamat
	is_triggered_only = yes

	option = {
		name = ACS_00002_OPT_A		
	}
}

##############################
## PENTAGHAST - SAKYA BUFFS ##
##############################

# ACS.00003 - Spawn Sakya raiders
character_event = {
	id = ACS.00003 # HL.100
	hide_window = yes
	is_triggered_only = yes

	min_age = 16
	max_age = 50
	only_men = yes
	capable_only = yes
	prisoner = no

	trigger = {
		dynasty = 300000
		is_ruler = no
		NOT = { has_character_flag = raiding_adventurer }
	}

	immediate = {
		end_inaccessibility_effect = yes #removes in hiding or in_seclusion
		add_trait = adventurer

		liege = {
			primary_title = {
				holder_scope = {
					save_event_target_as = previous_liege
				}
			}

			capital_scope = {
				save_event_target_as = target_province
				ROOT = {
					set_defacto_liege = ROOT
					create_title = {
						tier = DUKE
						landless = yes
						adventurer = yes
						culture = ROOT
						name = "CLAIMANT_ADVENTURE"
						holder = ROOT
					}
					set_character_flag = raiding_adventurer
				
					character_event = { id = HL.102 } #create troops vikings
					
					create_random_soldier = {
						random_traits = yes
						dynasty = none
						religion = ROOT
						culture = ROOT
						female = no
						age = 30
					}
					create_random_soldier = {
						random_traits = yes
						dynasty = none
						religion = ROOT
						culture = ROOT
						female = no
						age = 25
					}
					spawn_fleet = {
						province = closest # closest sea zone
						owner = ROOT
						disband_on_peace = yes
						troops =
						{
							galleys = { 110 110 }
						}
					}
				}
			}
		}
		character_event = { id = ACS.00005 days = 750 random = 50 }
	}
}

# ACS.00004 - Marry every single Pentaghast and Sakya male
character_event = {
	id = ACS.00004
	is_triggered_only = yes
	hide_window = yes
	only_men = yes

	trigger = {
		OR = {
			dynasty = 300001
			dynasty = 300000
		}
		can_marry = yes
		is_married = no
		is_adult = yes
		age > 21
		prisoner = no
		ai = yes
	}

	immediate = {
		add_trait = strong
		set_character_flag = acs_auto_marry
		create_character = {
			random_traits = yes
			culture = ROOT
			religion = ROOT
			dynasty = none
			female = yes
			age = 18
		}
		new_character = {
			add_lover = PREV
			add_spouse = PREV
		}
	}
}

# ACS.00005 - Clean up Sakya Raiders
character_event = {
	id = ACS.00005	
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		log = "Adventurer: [Root.GetTitledFirstName] has returned home."
		clr_character_flag = raiding_adventurer
		disband_event_forces = yes
		primary_title = {
			if = {
				limit = {
					OR = {
						AND = {
							tier = DUKE
							adventurer = yes
						}
						tier = EMPEROR
					}
				}
				activate_title = { title = THIS status = no }
				destroy_landed_title = THIS
			}
		}
		if = {
			limit = {
				prisoner = no
			}
			dynasty_head = {
				ROOT = {
					set_defacto_liege = PREV
				}
			}
		}
	}
}

# ACS.00010 - AVAILABLE
# ACS.00011 - AVAILABLE
# ACS.00012 - AVAILABLE
# ACS.00013 - AVAILABLE

# ACS.00014 - Ensure inherit Khalga or Vee trait for cuckoo
character_event = {
	id = ACS.00014
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			true_father_even_if_dead = {
				trait = khalga_blood
			}
			true_father_even_if_dead = {
				trait = vee_blood
			}
		}
	}

	immediate = {
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = khalga_blood
				}
			}
			add_trait = khalga_blood			
		}
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = vee_blood
				}
			}
			add_trait = vee_blood			
		}
	}
}

# ACS.00015 - AVAILABLE
# ACS.00016 - AVAILABLE

# ACS.00017 - Kill Khalga after 9 months honeymoon
character_event = {
	id = ACS.00017
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		death = { death_reason = death_missing }
	}
}

# ACS.00018 - Message to female ruler. Khalga seduction
narrative_event = {
	id = ACS.00018
	title = ACS_00018_TITLE
	desc = ACS_00018_DESC
	picture = GFX_evt_emissary_byzantine
	is_triggered_only = yes

	option = {
		name = EXCELLENT		
	}

}

# ACS.00019 - AVAILABLE
# ACS.00020 - AVAILABLE
# ACS.00021 - AVAILABLE

##########################
## VEE LIFECYCLE EVENTS ##
##########################
# ACS.00025 - Kill Vee at 45 yo
character_event = {
	id = ACS.00025
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		ROOT = {
			if = {
				limit = {
					age >= 45
				}
				death = { death_reason = death_poor_health }
			}
		}
	}
}

# ACS.00028 - AVAILABLE

##############################################
# ACS.00029 - Dojutsu inheritance mechanics ##
##############################################
character_event = {
	id = ACS.00029
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			trait = khalga_blood
			trait = vee_blood
		}
	}

	immediate = {
		# BYAKUGAN INHERITANCE BOTH
		if = {
			limit = {
				OR = {
					has_character_flag = is_vee
					has_character_flag = is_khalga
				}
			}
			break = yes
		}
		if = {
			limit = {
				true_father_even_if_dead = {
					trait = khalga_blood
				}
				mother_even_if_dead = {
					trait = khalga_blood
				}							
			}
			set_character_flag = evaluated_both_byakugan
			random_list = {
				15 = { add_trait = byakugan }
				85 = { }
			}			
		}
		# BYAKUGAN INHERITANCE
		if = {
			limit = {
				NOT = { has_character_flag = evaluated_both_byakugan }
				OR = {
					true_father_even_if_dead = {
						trait = khalga_blood
					}
					mother_even_if_dead = {
						trait = khalga_blood
					}
				}				
			}
			random_list = {
				7 = { add_trait = byakugan }
				93 = { }
			}			
		}

		# SHARINGAN INHERITANCE
		if = {
			limit = {				
				true_father_even_if_dead = {
					trait = vee_blood
				}
				mother_even_if_dead = {
					trait = vee_blood
				}
			}
			set_character_flag = evaluated_both_sharingan
			random_list = {
				15 = { add_trait = sharingan }
				85 = { }
			}
		}
		if = {
			limit = {
				NOT = { has_character_flag = evaluated_both_sharingan }
				OR = {
					true_father_even_if_dead = {
						trait = vee_blood
					}
					mother_even_if_dead = {
						trait = vee_blood
					}
				}
			}
			random_list = {
				7 = { add_trait = sharingan }
				93 = { }
			}
		}

		# Checks if has the two bloodlines
		if = {
			limit = {
				trait = khalga_blood
				trait = vee_blood
			}
			random_list = {
				999999 = {
					add_trait = depressed
					add_trait = incapable
					add_trait = infirm
					add_trait = lunatic
					add_trait = maimed
					add_trait = scarred_high
					add_trait = wounded
					add_trait = blinded
					add_trait = clubfooted
					add_trait = dwarf
					add_trait = harelip
					add_trait = hunchback
					add_trait = imbecile
					add_trait = inbred
					add_trait = lisp
					add_trait = slow
					add_trait = stutter
					add_trait = weak
				}
				1 = {
					add_trait = rinnegan
				}
			}
		}
	}
}

# ACS.00030 - AVAILABLE

# ACS.00034 - Resurrect Vee if she dies
character_event = {
	id = ACS.00034
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	immediate = {
		father_even_if_dead = {
			dynasty_head = {
				save_event_target_as = pentaghast_leader
				create_character = {
					name = Vee
					female = yes
					culture = event_target:pentaghast_leader
					religion = event_target:pentaghast_leader
					age = 0
					trait = fair
					trait = strong
					trait = mystic
					trait = mangekyo_sharingan
					trait = syrena
					trait = kind
					trait = lustful
					trait = diligent
					trait = proud
					trait = vee_blood
					trait = seductress
					trait = prevent_marriage
					trait = ambitious
					trait = cynical
					trait = erudite
					trait = gregarious
					trait = lefthanded
					dynasty = 300001
				}
				new_character = {
					set_character_flag = is_vee
					set_character_flag = society_join_block	
					set_character_flag = originated_from_chinese_court
					set_character_flag = immune_tuberculosis
					set_character_flag = immune_bubonic_plague
					set_father = event_target:pentaghast_leader
				}
				offmap_vee = {
					set_status = vee_status_newborn
				}
			}
		}
	}
}

# ACS.00035 - AVAILABLE

########################
##    VEE PARTNER     ##
########################
# ACS.00036 - Search a spouse for Vee if she isn't married
character_event = {
	id = ACS.00036
	is_triggered_only = yes
	hide_window = yes
	has_character_flag = is_vee

	trigger = {
		is_married = no
		age >= 16
	}

	immediate = {
		character_event = { id = ACS.00039 days = 15 } # Flag for the winner
		character_event = { id = ACS.00040 days = 30 } # Notify the winner
		liege = {
			save_event_target_as = vee_liege
		}
		
		any_character = {
			limit = {
				can_marry = yes
				is_inaccessible_or_incapable_trigger = no
				religion_group = event_target:vee_liege
				NOT = { dynasty = 300001 }
				age = 16
				NOT = { age = 50 }
				is_female = no
				NOT = { trait = celibate }
				NOT = { trait = eunuch }
				NOT = { has_character_flag = is_khalga }
				OR = {
					real_tier = EMPEROR
					real_tier = KING
					real_tier = DUKE
					real_tier = COUNT
					real_tier = BARON
				}
				is_landed = yes
				is_patrician = no
			}
			letter_event = { id = ACS.00037 } # Notification for participation
		}
	}
}

# ACS.00037 - Notification for participation
letter_event = {
	id = ACS.00037
	desc = ACS_00037_DESC
	is_triggered_only = yes

	option = {
		name = ACS_00037_OPT_A
		set_character_flag = evaluation_for_vee
		will_not_marry_effect = yes
		character_event = { id = ACS.00038 }
	}

	option = {
		name = ACS_00037_OPT_B
	}
}

# ACS.00038 - Assign score for participants
character_event = {
	id = ACS.00038
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		character_event = { id = ACS.00042 days = 45 } # Clean flags, trait and modifiers
		random_list = {
			20 = { # EMPEROR list
				set_character_flag = evaluation_vee_score_5
				modifier = {
					factor = 0
					OR = {
						real_tier = KING
						real_tier = DUKE
						real_tier = COUNT
						real_tier = BARON
					}
				}
			}			
			20 = { # KING tier list
				set_character_flag = evaluation_vee_score_4
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = DUKE
						real_tier = COUNT
						real_tier = BARON
					}
				}
			}
			20 = { # DUKE tier list
				set_character_flag = evaluation_vee_score_3
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = KING
						real_tier = COUNT
						real_tier = BARON
					}
				}
			}
			20 = { # COUNT tier list
				set_character_flag = evaluation_vee_score_2
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = KING
						real_tier = DUKE
						real_tier = BARON
					}
				}
			}
			20 = { # BARON heir tier list
				set_character_flag = evaluation_vee_score_1
				modifier = {
					factor = 0
					OR = {
						real_tier = EMPEROR
						real_tier = KING
						real_tier = DUKE
						real_tier = COUNT
					}
				}
			}
		}
	}
}

# ACS.00039 - Assign a flag for the winner
character_event = {
	id = ACS.00039
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_5
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_5
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_4
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_4
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_3
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_3
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_2
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_2
			set_character_flag = tournament_vee_winner
			break = yes
		}
		random_character = {
			limit = {
				has_character_flag = evaluation_vee_score_1
				has_character_flag = evaluation_for_vee
			}
			clr_character_flag = evaluation_vee_score_1
			set_character_flag = tournament_vee_winner
			break = yes
		}
	}
}

# ACS.00040 - Select the winner and send a notification
character_event = {
	id = ACS.00040
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_character = {
			limit = {
				has_character_flag = tournament_vee_winner
			}
			narrative_event = { id = ACS.00041 }
		}
	}
}

# ACS.00041 - Winner receives a fancy notification
narrative_event = {
	id = ACS.00041
	title = ACS_00041_TITLE
	desc = ACS_00041_DESC
	picture = GFX_evt_emissary_byzantine
	is_triggered_only = yes

	option = {
		name = OK
		FROMFROM = { # Vee
			add_spouse = ROOT
			culture = ROOT
			religion = ROOT
		}
		ROOT = {
			add_character_modifier = {
				name = married_with_vee
				duration = -1
			}
			add_trait = ambitious
		}
	}
}

# ACS.00042 - Clean flags, trait and modifiers
character_event = {
	id = ACS.00042
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		remove_character_modifier = will_not_marry
		remove_trait = cannot_marry
		clr_character_flag = tournament_vee_winner
		clr_character_flag = evaluation_for_vee
		clr_character_flag = evaluation_vee_score_1
		clr_character_flag = evaluation_vee_score_2
		clr_character_flag = evaluation_vee_score_3
		clr_character_flag = evaluation_vee_score_4
		clr_character_flag = evaluation_vee_score_5
	}
}

# ACS.00045 - Vee has childs every 2 years to balance Khalga's byakugan
character_event = {
	id = ACS.00045
	hide_window = yes
	is_triggered_only = yes
	has_character_flag = is_vee

	trigger = {
		is_married = yes
		is_pregnant = no
	}

	immediate = {
		random_spouse = {
			save_event_target_as = vee_spouse
		}
		ROOT = {
			impregnate = event_target:vee_spouse
		}

		# Kill another khalga instances for security
		khalga_trait = {
            death = { death_reason = death_missing }
        }

		# Search Khalga next target
		random_playable_ruler = {
			limit = {
				is_female = yes
				is_landed = yes
				is_pregnant = no
				age >= 16
				age <= 55
				NOT = { has_character_flag = is_vee }
			}
			save_event_target_as = khalga_lover
			create_khalga_effect = yes
			impregnate_cuckoo = event_target:chr_khalga
			add_lover = event_target:chr_khalga
			narrative_event = { id = ACS.00018 }
		}
	}
}

# ACS.00046 - Set new status offmap vee if spouse is death
character_event = {
	id = ACS.00046
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_spouse = {
			has_character_flag = is_vee
		}
	}

	immediate = {
		offmap_vee = {
			set_status = vee_status_adulthood
		}
	}
}

# ACS.00047 - AVAILABLE

##############################
## MANGEKYO EVENTS ###########
##############################
# ACS.00048 - Choice for the mangekyo every 5 years
narrative_event = {
	id =  ACS.00048
	title = ACS_00048_TITLE
	desc = ACS_00048_DESC
	picture = GFX_evt_bloodlines
	is_triggered_only = yes

	trigger = {
		trait = sharingan
		trait = ambitious
		NOT = { trait = mangekyo_sharingan }
		OR = {
			num_of_friends >= 1
			num_of_lovers >= 1
		}
	}

	option = {
		name = ACS_00048_OPT_A
		ai_chance = {
			factor = 99
			modifier = {
				factor = 0
				trait = craven
			}
		}
		trigger = {
			num_of_friends >= 1
		}
		random_friend = {
			set_character_flag = mangekyo_friend
			letter_event = { id = ACS.00049 }
		}
	}

	option = {
		name = ACS_00048_OPT_B
		ai_chance = {
			factor = 99
			modifier = {
				factor = 0
				trait = craven
			}
		}
		trigger = {
			num_of_lovers >= 1
		}
		random_lover = {
			set_character_flag = mangekyo_lover
			letter_event = { id = ACS.00049 }
		}
	}

	option = {
		name = ACS_00048_OPT_C
		ai_chance = {
			factor = 1
		}
	}
}

# ACS.00048 - A letter for the defender. Tag combatants
letter_event = {
	id = ACS.00049
	desc = ACS_00049_DESC
	is_triggered_only = yes

	immediate = {
		save_event_target_as = combatant_2
		narrative_event = { id = ACS.00051 days = 3 }
		FROM = {
			save_event_target_as = combatant_1
			narrative_event = { id = ACS.00050 days = 3 }
			character_event = { id = ACS.00052 days = 4 } # The DUEL
		}
	}

	option = {
		name = ACS_00049_OPT_A
	}
}

# ACS.00050 - The attacker decides
narrative_event = {
	id = ACS.00050
	title = ACS_00050_TITLE
	desc = ACS_00050_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = ACS_00050_OPT_A
	}
}

# ACS.00051 - The defender decides
narrative_event = {
	id = ACS.00051
	title = ACS_00051_TITLE
	desc = ACS_00051_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = ACS_00051_OPT_A
	}
}

##################################################
## This should end with the dead of one of them ##
##################################################

character_event = {
	id = ACS.00052 # HFP.10100
	is_triggered_only = yes
	hide_window = yes
	trigger = {        
	}

	immediate = {     
		#Chooses a weapon for mainly loc purposes (but has a tiny effect on outcomes, too)...
		set_dueling_weapon_effect = yes
		event_target:combatant_2 = { set_dueling_weapon_effect = yes } 
		#Chooses a body part for injury (if it occurs), also for loc purposes (effect handles both characters)
		set_potential_injury_flag_effect = yes

		#Scripted effect requiring event-targets combatant_1 & combatant_2! RAW NUMBERS...
		evaluate_duel_result_score_effect = yes

		#Room for extra special calculations... (based on traits, and other special circumstances?)
		evaluate_extra_duel_result_score_effect = yes

		#Send the correct result event (from random_list)...
		send_mangekyo_duel_result_event_effect = yes 
	}
}

# ACS.00053 - LETHAL for both...
narrative_event = {
	id = ACS.00053
	title = ACS_00053_TITLE
	desc = ACS_00053_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = OK
	}  
}

# ACS.00054 - LETHAL for defender...
narrative_event = {
	id = ACS.00054
	title = ACS_00054_TITLE
	desc = ACS_00054_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = OK
	}  
}

# ACS.00055 - LETHAL for attacker...
narrative_event = {
	id = ACS.00055
	title = ACS_00055_TITLE
	desc = ACS_00055_DESC
	picture = GFX_evt_duel_scene
	is_triggered_only = yes

	option = {
		name = OK
	}  
}

############################
## VEE DIPLOMATIC OPTIONS ##
############################
# ACS.00056 - AVAILABLE

# ACS.00060 - Vee improve relations with a local noble
character_event = {
	id = ACS.00060
	hide_window = yes
	has_character_flag = is_vee
	is_married = yes
	only_women = yes
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		NOT = { has_character_modifier = in_seclusion }
		NOT = { has_character_modifier = bedridden_illness }
		NOT = { trait = incapable }
	}
	
	mean_time_to_happen = {
		months = 24
	}
	
	immediate = {
		liege = {
			random_vassal = {
				limit = {
					primary_title = { higher_tier_than = BARON }
				}
				narrative_event = { id = ACS.00061 days = 7 }
			}
		}
	}
}

# ACS.00061 - Inform the noble
narrative_event = {
	id = ACS.00061
	title = ACS_00061_TITLE
	desc = ACS_00061_DESC
	picture = GFX_evt_vee_diplo_notify
	border = GFX_event_narrative_frame_diplomacy	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		hidden_tooltip = {
			FROM = {
				liege = { narrative_event = { id = ACS.00062 } }
			}
		}
	}
}

# ACS.00062: The liege is informed of the success
narrative_event = {
	id = ACS.00062
	title = ACS_00062_TITLE
	desc = ACS_00062_DESC
	picture = GFX_evt_vee_diplo_notify
	border = GFX_event_narrative_frame_diplomacy	
	show_from_from = yes	
	is_triggered_only = yes
	
	option = {
		name = EXCELLENT
		FROM = {
			opinion = {
				modifier = opinion_improved_relations
				who = ROOT
				years = 4
			}
		}
	}
}

# ACS.00063 - Vee sows dissent
character_event = {
	id = ACS.00063
	hide_window = yes
	has_character_flag = is_vee
	is_married = yes
	only_women = yes
	min_age = 16
	capable_only = yes
	prisoner = no
	
	trigger = {
		NOT = { has_character_modifier = in_seclusion }
		NOT = { has_character_modifier = bedridden_illness }
		NOT = { trait = incapable }
	}

	mean_time_to_happen = {
		months = 24
	}
	
	immediate = {
		liege = {
			save_event_target_as = vee_spouse
		}
		random_playable_ruler = {
			limit = {
				NOT = { is_vassal_or_below_of = event_target:vee_spouse }
				NOT = { character = event_target:vee_spouse }
				independent = no
			}
			character_event = { id = ACS.00064 days = 7 }
		}
	}
}

# ACS.00064: The local noble start disliking his liege
character_event = {
	id = ACS.00064
	desc = "EVTDESC20160"
	picture = GFX_evt_spymaster
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTA20160"
		liege = {
			reverse_opinion = {
				modifier = opinion_furious
				who = ROOT
				years = 2
			}
			character_event = { id = ACS.00065 days = 7 tooltip = "EVTTOOLTIP20161" }
		}
	}
}

# ACS.00065: The liege of the local noble is informed
character_event = {
	id = ACS.00065
	desc = "EVTDESC20161"
	picture = GFX_evt_spymaster
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTA20161"
		tooltip = {
			FROM = {
				opinion = {
					modifier = opinion_furious
					who = ROOT
					years = 2
				}
			}
		}
		opinion = {
			modifier = opinion_angry
			who = FROM
			years = 2
		}
	}
}

# ACS.00066 - Vee kills a liege enemy
character_event = {
	id = ACS.00066
	hide_window = yes
	has_character_flag = is_vee
	is_married = yes
	only_women = yes
	min_age = 16
	capable_only = yes
	prisoner = no

	trigger = {
		NOT = { has_character_modifier = in_seclusion }
		NOT = { has_character_modifier = bedridden_illness }
		NOT = { trait = incapable }
		liege = {
			num_of_rivals > 0
		}
	}

	mean_time_to_happen = {
		months = 12
	}

	immediate = {
		liege = {
			random_rival = {
				character_event = { id = ACS.00067 days = 3 }
			}
		}
	}
}

# ACS.00067 - Poisonous Snake
character_event = {
	id = ACS.00067
	desc = "EVTDESC7825"
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	hide_from = yes
	
	is_triggered_only = yes
		
	option = {
		name = "EVTOPTB7825"
		death = { death_reason = death_murder_unknown_snakes killer = FROM }
	}
}

# ACS.00068 - Use Warframe in battle
character_event = {
	id = ACS.00068
	is_triggered_only = yes
	hide_window = yes	
	capable_only = yes
	prisoner = no

	trigger = {
		any_artifact = {
			has_artifact_flag = warframe
		}
		OR = {
			had_character_flag = { flag = warframe_used_battle days = 15 } 
			NOT = { has_character_flag = warframe_used_battle }
		}		
		
	}

	immediate = {
		set_character_flag = warframe_used_battle
		if = {
			limit = { 
				is_ruler = yes
				war = yes
				OR = {
					is_primary_war_attacker = yes
					is_primary_war_defender = yes
					independent = yes
				}
			}
			any_current_enemy = {
				limit = { 
					at_location = ROOT
					in_command = yes
					prisoner = no
				}
				troops = -0.025
				morale = -0.15
			}	
			any_current_enemy = {
				any_realm_character = {
					limit = { 
						at_location = ROOT
						in_command = yes
						prisoner = no
					}
					troops = -0.025
					morale = -0.15			
				}			
			}
		}	
		any_liege = {
			limit = {
				NOT = { character = ROOT }
				war = yes
				OR = {
					is_primary_war_attacker = yes
					is_primary_war_defender = yes
					independent = yes
				}
			}
			any_current_enemy = {
				limit = { 
					at_location = ROOT
					in_command = yes
					prisoner = no
				}
				troops = -0.025
				morale = -0.2
			}	
			any_current_enemy = {
				any_realm_character = {
					limit = { 
						at_location = ROOT
						in_command = yes
						prisoner = no
					}
					troops = -0.025
					morale = -0.15		
				}			
			}
		}
	}
}
