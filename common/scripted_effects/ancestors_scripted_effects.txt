create_khalga_effect = {
	create_character = {
		age = 26
		female = no
		culture = event_target:khalga_lover
		religion = event_target:khalga_lover
		dynasty = none
		trait = mastermind_theologian
		trait = physician
		trait = fair
		trait = genius
		trait = erudite
		trait = byakugan
		trait = strong
		trait = prevent_marriage
		trait = khalga_blood
		trait = seducer
		trait = khalga_trait
		trait = patient
		trait = proud
		trait = lustful
	}
	new_character = {
		set_character_flag = is_khalga
		set_character_flag = society_join_block
		set_character_flag = originated_from_chinese_court # to prevent to go to China
		set_character_flag = wolf_blood_first_generation
		set_character_flag = immune_bubonic_plague
		add_character_modifier = {
			name = wolf_child
			duration = -1
		}
		save_event_target_as = khalga
		give_minor_title = title_court_physician
	}
}

create_pentaghast_child_effect = {
	create_character = {
		age = 0
		female = 50
		dynasty = 300001
	}
	new_character = {
		set_mother = PREV
		set_immune_to_pruning = yes
	}
}

create_sakya_child_effect = {
	create_character = {
		age = 0
		female = 50
		dynasty = 300000
	}
	new_character = {
		set_mother = PREV
		set_immune_to_pruning = yes
	}
}

send_mangekyo_duel_result_event_effect = { # Runs via the attacker/combatant_1
	random_list = {
		20 = { #LETHAL for both...
			trigger = {}
			additive_modifier = {
				duel_result_score_decent_trigger = yes #Score: fairly evenly matched
				value = 1
			}
			additive_modifier = { #Both have highest skill
				is_the_best_duelist_trigger = yes
				event_target:combatant_2 = { is_the_best_duelist_trigger = yes }
				value = 1
			}
			additive_modifier = { #Both have the worst skill
				is_the_worst_duelist_trigger = yes
				event_target:combatant_2 = { is_the_worst_duelist_trigger = yes }
				value = 5
			}
			if = {
				limit = { #Both have the best skill
					is_the_best_duelist_trigger = yes
					event_target:combatant_2 = { is_the_best_duelist_trigger = yes }
				}
				set_character_flag = elegant_double_KO
				event_target:combatant_2 = { set_character_flag = elegant_double_KO }
			}
			if = {
				limit = { #Both have the worst skill
					is_the_worst_duelist_trigger = yes
					event_target:combatant_2 = { is_the_worst_duelist_trigger = yes }
				}
				set_character_flag = clumsy_double_KO
				event_target:combatant_2 = { set_character_flag = clumsy_double_KO }
			}
			
			#mostly to deal with Kinslayer effect and tooltips...
			set_character_flag = someone_died
			event_target:combatant_2 = { set_character_flag = someone_died }

			#to determine custom loc outcomes...
			set_character_flag = actually_injured
			set_character_flag = injury_kills
			event_target:combatant_2 = {
				set_character_flag = actually_injured
				set_character_flag = injury_kills
			}

			character_event = { id = HFP.10101 } #double death event (attacker)
			event_target:combatant_2 = { character_event = { id = HFP.10102 days = 1 } } #double death event (defender)
		}

		40 = { #LETHAL for attacker...
			trigger = {}
			additive_modifier = {
				duel_result_score_low_group_trigger = yes #Score: you were outmatched
				value = 5
			}
			additive_modifier = {
				duel_result_score_the_worst_trigger = yes #Score: REALLY outmatched
				value = 10
			}
			additive_modifier = {
				is_bad_duelist_trigger = yes #Skill: bad
				value = 20
			}
			additive_modifier = {
				is_terrible_duelist_trigger = yes #Skill: terrible
				value = 30
			}
			additive_modifier = {
				is_the_worst_duelist_trigger = yes #Skill: the worst
				value = 40
			}
			additive_modifier = {
				has_character_flag = defender_using_poison@event_target:combatant_1 #Defender used poison
				value = 30
			}
			additive_modifier = {
				has_character_flag = poison_can_fail_against@event_target:combatant_1 #Attacker might catch the poison
				value = -25
			}
			additive_modifier = {
				event_target:dueling_weapon_2 = { #Defender is using a *gun*
					has_artifact_flag = gun
				}
				NOT = {
					event_target:dueling_weapon_1 = {
						has_artifact_flag = gun
					}
				}
				value = 30
			}

			if = { #this fight is taking place on the battlefield!
				limit = {
					has_character_flag = is_battlefield_duel
				}
				log = "BATTLE EVENTS: [combatant_1.GetBestName] should have died, but gets to offer themselves up as prisoner, to [combatant_2.GetBestName] instead."
				character_event = { id = HFP.11042 } #You can offer yourself up as their prisoner instead-event
			}
			else = { #Otherwise, regular duel death for the attacker...
				set_character_flag = someone_died
				set_character_flag = actually_injured
				set_character_flag = injury_kills

				event_target:combatant_2 = {
					set_character_flag = someone_died
					character_event = { id = ACS.00052 days = 1 } #"I decapitated someone!" event sent to winner...
				}
			}
		}

		40 = { #LETHAL for defender...
			trigger = {}
			additive_modifier = {
				duel_result_score_high_group_trigger = yes #Score: they were outmatched
				value = 5
			}
			additive_modifier = {
				duel_result_score_the_best_trigger = yes #Score: REALLY outmatched
				value = 10
			}
			additive_modifier = {
				event_target:combatant_2 = { is_bad_duelist_trigger = yes } #Their Skill: bad
				value = 20
			}
			additive_modifier = {
				event_target:combatant_2 = { is_terrible_duelist_trigger = yes } #Their Skill: terrible
				value = 30
			}
			additive_modifier = {
				event_target:combatant_2 = { is_the_worst_duelist_trigger = yes } #Their Skill: the worst
				value = 40
			}
			additive_modifier = {
				has_character_flag = attacker_using_poison@event_target:combatant_2 #Attacker used poison
				value = 30
			}
			additive_modifier = {
				has_character_flag = poison_can_fail_against@event_target:combatant_2 #Defender might catch the poison
				value = -25
			}
			additive_modifier = {
				event_target:dueling_weapon_1 = { #Attacker is using a *gun*
					has_artifact_flag = gun
				}
				NOT = {
					event_target:dueling_weapon_2 = {
						has_artifact_flag = gun
					}
				}
				value = 30
			}
			
			set_character_flag = someone_died

			event_target:combatant_2 = {
				set_character_flag = someone_died
				set_character_flag = actually_injured
				set_character_flag = injury_kills
			}

			character_event = { id = ACS.00050 } # Set the sharingan
			character_event = { id = ACS.00052 } # HFP.10103 "I decapitated someone!" event sent to winner...
		}
	}
}
